using Duplicati.Library.Localization.Short;
namespace Duplicati.Library.Backend.Strings
{
    internal static class Rclone
    {
        public static string DisplayName { get { return LC.L(@"Rclone"); } }
        public static string Description { get { return LC.L(@"This backend can read and write data to Rclone."); } }
        public static string RcloneLocalRepoShort { get { return LC.L(@"Local repository"); } }
        public static string RcloneLocalRepoLong { get { return LC.L(@"Local repository for Rclone. Make sure it is configured as a local drive, as it needs access to the files generated by Duplicati."); } }
        public static string RcloneRemoteRepoShort { get { return LC.L(@"Remote repository"); } }
        public static string RcloneRemoteRepoLong { get { return LC.L(@"Remote repository for Rclone. This can be any of the backends provided by Rclone. More info available on https://rclone.org/."); } }
        public static string RcloneRemotePathShort { get { return LC.L(@"Remote path"); } }
        public static string RcloneRemotePathLong { get { return LC.L(@"Path on the Remote repository. "); } }
        public static string RcloneOptionRcloneShort { get { return LC.L(@"Rclone options."); } }
        public static string RcloneOptionRcloneLong { get { return LC.L(@"Options will be transferred to rclone."); } }
        public static string RcloneExecutableShort { get { return LC.L(@"Rclone executable"); } }
        public static string RcloneExecutableLong { get { return LC.L(@"Full path to the rclone executable. Only needed if it's not in your path."); } }

    }
}
